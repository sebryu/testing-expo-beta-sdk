name: Matrix Build with QR Summary

permissions:
  pull-requests: write  # needed for PR comment
  contents: read

on:
  workflow_dispatch:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [ios, android]
        app: [AppA, AppB, AppC, AppD]

    steps:
      - name: Generate fake install URL
        run: |
          INSTALL_URL="https://example.com/install/${{ matrix.app }}/${{ matrix.platform }}?evenLongerQueryString=1234567890&something=else"
          echo "INSTALL_URL=$INSTALL_URL" >> $GITHUB_ENV

      - name: Generate QR code PNG
        run: |
          sudo apt-get update && sudo apt-get install -y qrencode
          qrencode -o qr.png "$INSTALL_URL"

      - name: Encode QR as base64
        run: |
          BASE64_IMAGE=$(base64 -w 0 qr.png)
          echo "BASE64_IMAGE=$BASE64_IMAGE" >> $GITHUB_ENV

      - name: Write result.json
        run: |
          cat <<EOF > result.json
          {
            "platform": "${{ matrix.platform }}",
            "app": "${{ matrix.app }}",
            "url": "${INSTALL_URL}",
            "qr_base64": "${BASE64_IMAGE}"
          }
          EOF

      - name: Upload result.json artifact
        uses: actions/upload-artifact@v4
        with:
          name: result-${{ matrix.platform }}-${{ matrix.app }}
          path: result.json

  summarize:
    needs: build
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download all result artifacts
        uses: actions/download-artifact@v4
        with:
          path: results/

      - name: Generate summary.html
        run: |
          echo '<h2>Build Summary</h2>' > summary.html
          echo '<table border="1" cellspacing="0" cellpadding="6"><tr><th>App / Platform</th><th>iOS</th><th>Android</th></tr>' >> summary.html

          for app in AppA AppB AppC AppD; do
            echo "<tr><th>$app</th>" >> summary.html
            for platform in ios android; do
              FILE="results/result-${platform}-${app}/result.json"
              if [ -f "$FILE" ]; then
                URL=$(jq -r '.url' "$FILE")
                BASE64=$(jq -r '.qr_base64' "$FILE")
                echo "<td><a href=\"$URL\">Install</a><br/><img src=\"data:image/png;base64,$BASE64\" width=\"120\"/><br/><img src='https://img.shields.io/badge/status-success-brightgreen' /></td>" >> summary.html
              else
                echo "<td>‚ùå</td>" >> summary.html
              fi
            done
            echo "</tr>" >> summary.html
          done

          echo "</table>" >> summary.html

      - name: Post to GitHub Step Summary
        run: cat summary.html >> $GITHUB_STEP_SUMMARY

      - name: Upload HTML summary artifact
        uses: actions/upload-artifact@v4
        with:
          name: summary-html
          path: summary.html

      - name: Create or update PR comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            edit-mode: replace
            issue-number: ${{ github.event.pull_request.number }}
            body-path: summary.html
            #   comment-id: ${{ steps.comment-id.outputs.comment-id }} # optional, if you use update logic

